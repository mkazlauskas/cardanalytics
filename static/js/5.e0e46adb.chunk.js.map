{"version":3,"sources":["app/test-store.ts","app/actions.ts","app/epics.ts","app/reducers.ts","app/store.ts","app/services.ts"],"names":["generalStats","blocks","transactions","stakePools","adaStake","assets","era","epoch","slot","store","createStore","loadGeneralStats","createAction","of","rootReducer","combineReducers","state","action","type","getType","payload","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","epicMiddleware","createEpicMiddleware","dependencies","middleware","applyMiddleware","run","combineEpics","epics"],"mappings":"+GAAA,gEAIaA,EAA6B,CACxCC,OAAQ,QACRC,aAAc,QACdC,WAAY,KACZC,SAAU,OACVC,OAAQ,MACRC,IAAK,UACLC,MAAO,IACPC,KAAM,QAGFC,EAAQC,aACZ,iBAAc,CACZV,mBAIWS,a,yFClBFE,EAAmBC,uBAAa,qBAAbA,G,OCSjB,GAFkB,kBAAMC,YAAGF,EAAiBX,mBCE9Cc,EAAcC,YAAgB,CAAEf,aAPxB,WAAwD,IAAvDgB,EAAsD,uDAAzB,KAAMC,EAAmB,uCAC1E,OAAIA,EAAOC,OAASC,kBAAQR,GACnBM,EAAOG,QAETJ,KCAHK,EAC4C,qBAAzCC,qCAAuDA,qCAAuCC,IACjGC,EAAiBC,YAAsD,CAAEC,aCXvD,KDYlBC,EAAaN,EAAiBO,YAAgBJ,IAE9Cf,EAAQC,YAAYI,EAAaa,GAEvCH,EAAeK,IAAIC,IAAY,WAAZ,cAAgBC,KAEpBtB","file":"static/js/5.e0e46adb.chunk.js","sourcesContent":["import { createStore } from 'redux';\nimport { State } from './reducers';\nimport { GeneralStats } from './types';\n\nexport const generalStats: GeneralStats = {\n  blocks: 5995095,\n  transactions: 9787836,\n  stakePools: 2877,\n  adaStake: 23.24*1000000000,\n  assets: 43751,\n  era: 'Shelley',\n  epoch: 278,\n  slot: 300948,\n}; \n\nconst store = createStore(\n  (): State => ({\n    generalStats\n  }),\n);\n\nexport default store;\n\n","import { ActionType, createAction } from 'typesafe-actions';\nimport { GeneralStats } from './types';\n\nexport const loadGeneralStats = createAction('LOAD_GENERAL_STATS')<GeneralStats>();\n\nexport const actions = { loadGeneralStats };\nexport type Action = ActionType<typeof actions>;","import { Epic } from 'redux-observable';\nimport { of } from 'rxjs';\nimport { Action, loadGeneralStats } from './actions';\nimport { State } from './reducers';\nimport { Services } from './services';\nimport { generalStats } from './test-store';\n\ntype CardanalyticsEpic = Epic<Action, Action, State, Services>;\n\n// TODO: replace with loading actual stats, not test stats\nconst load$: CardanalyticsEpic = () => of(loadGeneralStats(generalStats));\n\nexport default [load$];","import { combineReducers } from 'redux';\nimport { getType, StateType } from 'typesafe-actions';\nimport { Action, loadGeneralStats } from './actions';\nimport { GeneralStats } from './types';\n\nconst generalStats = (state: GeneralStats | null = null, action: Action) => {\n  if (action.type === getType(loadGeneralStats)) {\n    return action.payload;\n  }\n  return state;\n};\n\nexport const rootReducer = combineReducers({ generalStats });\n\nexport type State = StateType<typeof rootReducer>;","import { applyMiddleware, compose, createStore } from 'redux';\nimport { combineEpics, createEpicMiddleware } from 'redux-observable';\nimport { Action } from './actions';\nimport epics from './epics';\nimport { rootReducer, State } from './reducers';\nimport { services, Services } from './services';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ndeclare let __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: <R>(a: R) => R;\nconst composeEnhancers =\n  typeof __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ !== 'undefined' ? __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\nconst epicMiddleware = createEpicMiddleware<Action, Action, State, Services>({ dependencies: services });\nconst middleware = composeEnhancers(applyMiddleware(epicMiddleware));\n\nconst store = createStore(rootReducer, middleware);\n\nepicMiddleware.run(combineEpics(...epics));\n\nexport default store;\n","export const services = {};\nexport type Services = typeof services;"],"sourceRoot":""}